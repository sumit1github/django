pip install pillow
pip install qrcode


************************************************************ models.py **************************************************

from helpers import utils
qr_code = models.ImageField(upload_to='quote_qr', blank=True)
def save(self, *args, **kwargs):

    if not self.qr_code:
        file_path = utils.new_qr_code(self.quoteid)
        self.qr_code = file_path
        
    super().save(*args, **kwargs)
********************************************************* views.py *******************************************************
if not quote.qr_code:
   url = utils.new_qr_code(quote.id)
   quote.qr_code = url
   quote.save()

**************************************************************  utils.py **************************************************
import uuid
from django.conf import settings
import boto3
import io

# qr code ..
import qrcode
from PIL import Image, ImageDraw
from io import BytesIO
import random
import time
from django.core.files import File

s3 = boto3.resource('s3')

def generate_rand_number(digit=5):
    return str(int(str(uuid.uuid4().int)[:digit]))

def s3_file_upload(file_path, file_obj):
    
    s3 = boto3.resource('s3',
        aws_access_key_id=settings.AWS_ACCESS_KEY_ID,
        aws_secret_access_key=settings.AWS_SECRET_ACCESS_KEY,
        region_name=settings.AWS_S3_REGION_NAME,
                        
    )
    
    s3_bucket = s3.Bucket(settings.AWS_STORAGE_BUCKET_NAME)
    s3_object = s3_bucket.Object(f"{file_path}")
    s3_object.upload_fileobj(file_obj)
    
    # Return the S3 URL of the uploaded file
    latest_file_path = f"https://{settings.AWS_S3_CUSTOM_DOMAIN}/{file_path}"
    
    return latest_file_path 


def new_qr_code(quote_id):
    embaded_data = settings.DOMAIN_NAME + f'user_home/pdf/{quote_id}/'
    rand_number = generate_rand_number()

    # --- checking is media folder is present or not ---
    media_folder = os.path.join(settings.BASE_DIR, 'media/quote_qr')
    if not os.path.exists(media_folder):
        os.makedirs(media_folder)

    file_path = f'media/quote_qr/file{rand_number}.png'


    file_path = f'media/quote_qr/file{rand_number}.png'

    qr = qrcode.QRCode(version=1, error_correction=qrcode.constants.ERROR_CORRECT_L, box_size=10, border=4)
    qr.add_data(embaded_data)
    qr.make(fit=True)
    qr_img = qr.make_image(fill_color="black", back_color="white")

    # this setting for
    # if debg = true it will save the qr in local
    # else it save it to s3

    if settings.DEBUG:
        qr_img.save(file_path)

    else:
        qr_img_buffer = BytesIO()
        qr_img.save(qr_img_buffer, format='PNG')
        qr_img_buffer.seek(0)
        s3_url = s3_file_upload(file_path, qr_img_buffer)
        print("QR code uploaded to S3:", s3_url)
    
    return file_path[6:]
