middleware(folder) > middleware_name.py


**************************************************example1**************************************************
class SwaggerMiddleware:
    def __init__(self, get_response):
        self.get_response = get_response

    def __call__(self, request,*args,**kwargs):
        request.body  # just add this line BEFORE get_response

        request.post_data=request.GET if len(request.POST) == 0 else request.POST # for swagger
        if  request.post_data=={} and request.body:  #<--- for raw data (import)
            request.post_data=json.loads(request.body)
        # request.post_data= request.data

        if  request.post_data=={} and request.body:  #<--- for raw data (import)
            request.post_data=json.loads(request.body)

        response = self.get_response(request)
        return response
**********************************************example2*****************************************************

def set_profile_request(request, org, token):
    # we are decoding the token
    decoded = jwt.decode(token, (settings.SECRET_KEY), algorithms=[settings.JWT_ALGO])

    request.user = User.objects.get(id=decoded["user_id"])

    if request.user:
        request.profile = Profile.objects.get(
            user=request.user, org=org, is_active=True
        )
        request.profile.role = "ADMIN"
        request.profile.save()
        if request.profile is None:
            logout(request)
            return Response(
                {"error": False},
                status=status.HTTP_200_OK,
            )


class GetProfileAndOrg(object):
    def __init__(self, get_response):
        self.get_response = get_response

    def __call__(self, request):
        self.process_request(request)
        return self.get_response(request)

    def process_request(self, request):

        # here I am getting the the jwt token passing in header
        if request.headers.get("Authorization"):
            token1 = request.headers.get("Authorization")

            token = token1.split(" ")[1]  # getting the token value
            if request.headers.get("org"):
                org_id = request.headers.get("org")
                org = Org.objects.get(id=org_id)
                if org:
                    request.org = org
                    set_profile_request(request, org, token)
                else:
                    request.org = None
            else:
                request.org = None




------------------------------------ add to settings -----------------------
"common.middleware.get_company.GetProfileAndOrg",
MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    
    "common.middleware.get_company.GetProfileAndOrg", <----------------------
    ]
