class Product(models.Model):
    name=models.CharField(max_length=255,blank=True, null=True)
    price=models.FloatField(default=0.0,blank=True, null=True)

**************************views.py *****************************
from django.db.models import Sum, Max, Min, Avg

data_list=Product.objects.all().aggregate(Avg('price'))
output: {'price__avg': 106.66666666666667}

-------- if I want to change the key name of the output -------------

data_list=Product.objects.all().aggregate(key_name=Avg('price'))
output: {'key_name': 106.66666666666667}


---------------------------------------------------- useing of Annotate ------------------------------------
class Caregory(models.Model):
    name=models.CharField(max_length=255,blank=True, null=True)


class Product(models.Model):
    cat=models.ForeignKey(Caregory, null=True, blank=True, on_delete=models.CASCADE)
    name=models.CharField(max_length=255,blank=True, null=True)
    price=models.FloatField(default=0.0,blank=True, null=True)


*****************
Let, I want to print the category list. And number products associated with the category.
There are more ways, like template tags, method_serializer,
 here i will use annotate

example: I have a table with salary_list in it. I want to group them on basis of name.
--> Name can be present multiple times.
--> in result you need to show   | name | sum(pf_deduction_amount) | how many times he is present in list |

--> here the raw sql query

select employee_name, sum(pf_deduction_amount),count(*) from home_salary_save
group by employee_name
having employee_name like 'DEV%';

 
from django.db.models import Sum, Max, Min, Avg, Count
data = model.objects.values('employee_name').annotate(total_pf_deduction=Sum('pf_deduction_amount'),occurence=Count('*')).filter(employee_name__startswith="DEV")


# result in aggrigate function
data = model.objects.filter(employee_name__startswith="DEV").aggregate(total_pf_deduction=Sum('pf_deduction_amount'), occurence=Count('*'))
out_put = {'total_pf_deduction': 5438.26, 'occurence': 20}
 
 
